# NGINX configuration file for reverse proxy and load balancing

# Main server block
http {
    # Logging settings
    access_log /var/log/nginx/access.log;
    error_log /var/log/nginx/error.log;

    # Upstream definitions for load balancing
    upstream backend_servers {
        server backend1:8080;
        server backend2:8080;
        server backend3:8080;
    }

    # Main server block
    server {
        listen 80;
        listen [::]:80;
        server_name example.com www.example.com;

        # Redirect HTTP to HTTPS
        return 301 https://$server_name$request_uri;
    }

    # HTTPS server block
    server {
        listen 443 ssl http2;
        listen [::]:443 ssl http2;
        server_name example.com www.example.com;

        # SSL/TLS configurations
        ssl_certificate /etc/letsencrypt/live/example.com/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/example.com/privkey.pem;
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_prefer_server_ciphers on;
        ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;

        # HSTS (optional)
        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;

        # Proxy settings for routing requests to appropriate services
        location / {
            proxy_pass http://backend_servers;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Caching policies
        location ~* \.(jpg|jpeg|png|gif|ico|css|js)$ {
            expires 30d;
            add_header Cache-Control "public, no-transform";
        }

        # Additional location blocks for specific services can be added here
    }

    # Load balancing rules are defined in the upstream block above

    # Additional server blocks for other domains can be added here
}

# HUMAN ASSISTANCE NEEDED
# Please review the SSL/TLS configurations and ensure they meet current security standards.
# Verify that the upstream servers (backend1, backend2, backend3) are correctly defined and accessible.
# Confirm that the server_name and SSL certificate paths are correct for your domain.
# Adjust caching policies and expiration times based on your specific requirements.